package com.hugeyurt.homework;

public class H04_BigIntegerClass 
{
	char []biginteger;
	int []BI;
	public char[] getBiginteger() {
		return biginteger;
	}
	public void setBiginteger(char[] biginteger) {
		this.biginteger = biginteger;
	}
	public H04_BigIntegerClass(String s)
	{
		this.biginteger=s.toCharArray();
		this.BI=new int[biginteger.length];
		for(int i=0;i<biginteger.length;i++) {
			BI[i]=(int)biginteger[i]-48;
			System.out.println("BigInteger:"+biginteger[i]+"Int"+(BI[i]+2));
		}
	}
	public char []add(String s2)
	{
		char []biginteger2= s2.toCharArray();
		int DiffOfLength = Math.abs(biginteger.length-biginteger2.length);
		int maxLength=biginteger.length>biginteger2.length?biginteger.length:biginteger2.length;
		int minLength=biginteger.length<biginteger2.length?biginteger.length:biginteger2.length;
		for(int i=minLength-1;i>=0;i--)
		{
			if(minLength==biginteger.length)
			{
				biginteger2[i+DiffOfLength]=(char)((int)biginteger2[i+DiffOfLength]+(int)biginteger[i]);
				if((int)biginteger2[i+DiffOfLength]>10&&(i+DiffOfLength)>0)
				{
					biginteger2[i+1+DiffOfLength]+=1;
					biginteger2[i+DiffOfLength]-=10;
				}
			}
			else
			{
				
				if((int)biginteger[i+DiffOfLength]>10&&(i+DiffOfLength)>0)
				{
					biginteger[i+DiffOfLength]-=10;
					biginteger[i-1+DiffOfLength]+=1;
				}
			}
		}
		if(DiffOfLength>1)
		{
			for(int i=DiffOfLength-1;i>0;i++)
			{
				if(minLength==biginteger.length)
				{			
					if((int)biginteger2[i]>10)
					{
						biginteger2[i-1]+=1;
						biginteger2[i]-=10;
					}

				}
				else
				{
					if((int)biginteger[i]>10)
					{
						biginteger[i-1]+=1;
						biginteger[i]-=10;
					}

				}
			}
		}
		
		if(minLength==biginteger.length)
		{			
			if((int)biginteger2[0]>10)
			{
				char[]nbi=new char[biginteger2.length+1];
				nbi[0]=1;
				for(int i=nbi.length-1;i>0;i++)
				{
					nbi[i]=biginteger2[i-1];
				}
				return nbi;
			}
			else
				return biginteger2;
		}
		else
		{
			
			if((int)biginteger[0]>10)
			{
				char[]nbi=new char[biginteger2.length+1];
				nbi[0]=1;
				for(int i=nbi.length-1;i>0;i++)
				{
					nbi[i]=biginteger2[i-1];
				}
				return nbi;
			}
			else
				return biginteger;
		}
	}
}
